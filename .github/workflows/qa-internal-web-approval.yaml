name: CD QA INTERNAL WEB
run-name: CD QA INTERNAL WEB

on:
  workflow_dispatch:
    inputs:
      iuweb_image_tag:
        description: 'Tag of Internal Web Image'
        required: true

env:
  AWS_REGION : ${{ vars.DVSA_AWS_REGION }}
  IUWEB_NONPROD_TOOLING_REPO_URL: ${{ secrets.IUWEB_NONPROD_TOOLING_ECR_REPO_URL }}
  IUWEB_PROD_TOOLING_REPO_URL: ${{ secrets.IUWEB_PROD_TOOLING_ECR_REPO_URL }}

# Permission can be added at job level or workflow level
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:

  deploy-on-qa-cluster:

    name: Deploy on QA Cluster
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:

    - name: Configure AWS credentials on Non Production IUWEB ECR
      uses: aws-actions/configure-aws-credentials@v4.0.1
      with:
        role-to-assume: ${{ secrets.VOL_AWS_ROLE_TOOLING_NONPROD }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION}}

    - name: Login to Non Production IUWEB ECR
      id: login-ecr-iuweb-tooling-non-prod
      uses: aws-actions/amazon-ecr-login@v2.0.1

    - name: Validate Internal Web Image
      uses: dvsa/.github/.github/actions/image-integrity@feature/AddMiscAuxilaryWorkflows
      with:
        ecr_tagged_image:  ${{ secrets.IUWEB_NONPROD_TOOLING_ECR_REPO_URL }}:${{ github.event.inputs.iuweb_image_tag }}
        image_sign_inspect: 'true'  

    - name: Deploy on QA
      run: |
       echo 'Deploy on QA'

    # uses: dvsa/.github/.github/workflows/trigger-github-workflow.yaml@feature/AddMiscAuxilaryWorkflows
    # with:
    #   branch: 'feature/AWSRESET1-514'
    #   git_repository: 'dvsa/dvsa-container-registry'
    #   workflow_name: 'CD NON-PROD INTERNAL WEB'
    #   input_arguments: 'iuweb_image_tag=${{ github.event.inputs.iuweb_image_tag }}'
    # secrets:
    #   gh_token: ${{ secrets.DVSA_VOL_TERRAFORM_ACCESS_TOKEN }}

  qa-automation-tests:

    name: Run QA Automation Tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    needs:
    - deploy-on-qa-cluster

    steps:

    - name: Run automation tests
      run: |
       echo 'Run automation tests'

  prod-approve-image:

    name: Approval PROD Internal Web Image
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    needs:
    - qa-automation-tests

    steps:

    - name: Set NONPROD_IUWEB_IMAGE_TAG & PROD_IUWEB_IMAGE_TAG
      run: |
        inputImageTag=${{ github.event.inputs.IUWEB_image_tag }}
        echo "NONPROD_IUWEB_IMAGE_TAG=${inputImageTag}" >> $GITHUB_ENV
        echo "PROD_IUWEB_IMAGE_TAG=${inputImageTag#non}" >> $GITHUB_ENV

    - name: Configure AWS credentials on IUWEB Non Production Tooling ECR
      uses: aws-actions/configure-aws-credentials@v4.0.1
      with:
        role-to-assume: ${{ secrets.VOL_AWS_ROLE_TOOLING_NONPROD }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr-iuweb-tooling-non-prod
      uses: aws-actions/amazon-ecr-login@v2.0.1

    - name: Tag & Push PROD Approved Internal Web image
      if: github.ref == 'refs/heads/master'
      id: push-image
      run: |
        docker pull ${IUWEB_NONPROD_TOOLING_REPO_URL}:${NONPROD_IUWEB_IMAGE_TAG}
        docker tag ${IUWEB_NONPROD_TOOLING_REPO_URL}:${NONPROD_IUWEB_IMAGE_TAG} ${IUWEB_PROD_TOOLING_REPO_URL}:${PROD_IUWEB_IMAGE_TAG}
        docker push ${IUWEB_PROD_TOOLING_REPO_URL}:${PROD_IUWEB_IMAGE_TAG}

    - name: Sign PROD Internal Web image
      if: github.ref == 'refs/heads/master'
      uses: dvsa/.github/.github/actions/image-integrity@feature/AddMiscAuxilaryWorkflows
      with:
        aws_signer_profile_arn: ${{ secrets.DVSA_AWS_IUWEB_NONPROD_TOOLING_IMAGE_SIGNING_PROFILE }}
        ecr_tagged_image: ${IUWEB_PROD_TOOLING_REPO_URL}:${PROD_IUWEB_IMAGE_TAG}
        image_sign_create: 'true'
